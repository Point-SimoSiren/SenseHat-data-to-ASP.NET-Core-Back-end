//CONTROLLER CODE: (Model is down below)
// I send value, sender, and type from pi. Time is created on back-end.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using temperatureCore.Models;

namespace temperatureCore.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class MeasurementsController : ControllerBase
    {

        [HttpPost]
        [Route("")]
        public ActionResult CreateMeasurement([FromBody] Measurements mittaus)
        {
            hoivadbContext db = new hoivadbContext();
            try
            {
                mittaus.Time = DateTime.Now;

                db.Measurements.Add(mittaus);
                db.SaveChanges();
                return Ok(mittaus.MeasurementId);
            }
            catch (Exception e)
            {
                return BadRequest(e);
            }
            finally
            {
                db.Dispose();
            }

        }

    }
}
MODEL CODE:

using System;
using System.Collections.Generic;

namespace temperatureCore.Models
{
    public partial class Measurements
    {
        public int MeasurementId { get; set; }
        public int? Sender { get; set; } // Laitekoodi esim 1
        public DateTime? Time { get; set; }
        public string? Type { get; set; } // esim: "Lämpö"
        public double? Value { get; set; } 
    }
}
